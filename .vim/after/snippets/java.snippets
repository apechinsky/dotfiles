priority 1

## Class
snippet class
	public class ${1:`vim_snippets#Filename("$1", "untitled")`} {
		${0}
	}

##
## Block comments
snippet /*
	 * ${0}
	 */
##
## Javadoc Comments
snippet /*
	 * ${0}
	 */
##
## Constants
snippet const
	public static final String ${1:var} = "${2}";
##
## Constants
snippet switch
	switch (${1}) {
		case: ${0}
	}
##
## Declaration for ArrayList
snippet d.al
	List<${1:Object}> ${2:list} = new ArrayList<$1>();${0}
## Declaration for HashMap
snippet d.hm
	Map<${1:Object}, ${2:Object}> ${3:map} = new HashMap<$1, $2>();${0}
## Declaration for HashSet
snippet d.hs
	Set<${1:Object}> ${2:set} = new HashSet<$1>();${0}
##
## Error Methods
snippet try
	try {
		${0:${VISUAL}}
	} catch(${1:Exception} ${2:e}) {
	}
##
## Logger Methods
snippet logd
	private static final Logger LOGGER = LoggerFactory.getLogger(`vim_snippets#Filename("$1", "untitled")`.class);
##
## Loops
snippet itar
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4}
	}
snippet iter
	for (${1}: ${2}) {
		${0}
	}
##
## Main method
snippet! psvm
	public static void main (String[] args) {
		${0}
	}
snippet main
	public static void main (String[] args) {
		${0}
	}
##
## Print Methods
snippet sout
	System.out.println("${0}");
snippet serr
	System.err.println("${0}");
##
## Setter and Getter Methods
snippet set
	${1:public} void set${3:}(${2:String} ${0:}){
		this.$4 = $4;
	}
snippet get
	${1:public} ${2:String} get${3:}(){
		return this.${0:};
	}
##
## Test Methods
snippet t
	public void test${1:Name}() throws Exception {
		${0}
	}
snippet test
	@Test
	public void test${1:Name}() throws Exception {
		${0}
	}
